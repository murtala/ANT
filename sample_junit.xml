<project name="SampleJUnitTests" default="test" basedir=".">  <!-- starts with test target -->
	<description>
		Sample JUnit Tests
	</description>
	<!-- set global properties for this build -->

	<property name="project_name" value="junitSamples"/>
	<property name="src" location="src/main/java/samples/calculator"/>
	<property name="build" location="bin"/>
	<property name="dist"  location="dist"/>
	<property name="lib"  location="lib"/>
	<property name="res"  location="res"/>
	<property name="reports" location="reports"/>

	<!-- the names of various distributable files -->
	<property name="jar_name" value="${project_name}.jar"/>
	<property name="war_name" value="${project_name}.war"/>

	<!-- top level targets -->

	<target name="compile" depends="init" description="compile the source code " >
		<javac srcdir="${src}" destdir="${build}"> <!-- source and destination directory -->
			<classpath>
				<fileset dir="lib"> <!-- find the lib to compile with. looking for Junit -->
					<include name="**/*.jar"/>
				</fileset>
			</classpath>
		</javac>
	</target>

	<target name="dist" depends="compile" description="generate the distributable files " >
	    <!-- Put everything in ${build} into the MyProject-${DSTAMP}.jar file -->
	    <jar jarfile="${dist}/${jar_name}" basedir="${build}"/>
	</target>

	<target name="clean" description="clean up" >
	    <!-- Delete the ${build} and ${dist} directory trees -->
	    <delete dir="${build}"/>
	    <delete dir="${dist}"/>
	    <delete dir="${reports}"/>
	</target>

	<target name="run-tests" depends="compile" description="run your test suite" >  <!-- run test depends on compile , runs test-->
		<junit printsummary="yes" haltonfailure="no" showoutput="yes" > <!-- use JUnit , haltonfailure= no stop one one test case if false-->
			<classpath>
				<pathelement path="${build}"/>
				<fileset dir="lib">
					<include name="**/*.jar"/>
				</fileset>
			</classpath>
 		  <batchtest fork="yes" todir="${reports}/raw/">  <!--put a dedicated thread -->
		  	<formatter type="xml"/>
		    <fileset dir="${src}">   <!-- location of test -->
		      <include name="**/*Test*.java"/>  <!-- format of the result to be run, run them as junit,  -->
		    </fileset>
		  </batchtest>
		</junit>
	</target>

	<target name ="test" depends="run-tests">  <!-- will go to reun tests -->
		<junitreport todir="${reports}">
		  <fileset dir="${reports}/raw/">
		    <include name="TEST-*.xml"/>
		  </fileset>
		  <report format="frames" todir="${reports}\html\"/><!--take raw format and then write the test into html format -->
		</junitreport>
	</target>

	<target name ="run" depends="" description="if this project can be run, run it" >
	</target>

	<!-- supporting targets -->

	<target name="init" description="initialize the build environment" >
	    <!-- Create the time stamp -->
	    <tstamp/>
	    <!-- Create directory structures -->
            <delete dir="${build}"/>	    <!-- delete build directory-->
            <delete dir="${dist}"/>	  <!-- delete dist directory-->
            <delete dir="${reports}"/>	 <!-- delete report directory-->
            <mkdir dir="${build}"/>  <!-- create build directory-->
	    <mkdir dir="${dist}/lib"/> <!-- create build directory-->
	    <mkdir dir="${reports}"/> <!-- create report directory-->
	    <mkdir dir="${reports}/raw/"/> <!-- create raw directory-->
	    <mkdir dir="${reports}/html/"/> <!-- create html directory-->
	</target>

	<target name="all" depends="clean, test">
	</target>

</project>

